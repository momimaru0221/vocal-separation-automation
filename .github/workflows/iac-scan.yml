name: IaC Security and Compliance Check
on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

jobs:
  iac-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.5.6'

      - name: Terraform Init
        working-directory: infrastructure/terraform
        run: terraform init -no-color

      - name: Terraform Format & Validate
        working-directory: infrastructure/terraform
        run: |
          terraform fmt -check -no-color
          terraform validate -no-color

      - name: Install tfsec
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ca-certificates curl
          sudo update-ca-certificates
          curl -fL --retry 5 --retry-delay 5 \
            https://github.com/aquasecurity/tfsec/releases/latest/download/tfsec-linux-amd64 \
            -o tfsec
          chmod +x tfsec
          sudo mv tfsec /usr/local/bin/

      - name: tfsec Scan
        working-directory: infrastructure/terraform
        run: tfsec --no-colour --soft-fail

      - name: Install checkov
        run: pip install checkov

      - name: checkov Scan
        working-directory: infrastructure/terraform
        run: checkov -d . --framework terraform,kubernetes --quiet

      - name: Terraform Plan
        id: plan
        working-directory: infrastructure/terraform
        run: terraform plan -no-color | tee plan_output.txt

      - name: Set Plan Output
        id: set_plan_output
        shell: bash
        run: |
          echo "stdout<<EOF" >> $GITHUB_OUTPUT
          cat infrastructure/terraform/plan_output.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Comment Terraform plan
        uses: marocchino/sticky-pull-request-comment@v2
        if: always()
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          header: terraform-plan
          message: |
            ```hcl
            ${{ steps.set_plan_output.outputs.stdout }}
            ```

      - name: Check Ansible Dir and Files
        id: check_dir
        run: |
          if [ -d infrastructure/ansible ] && [ -s infrastructure/ansible/site.yml ] && [ -s infrastructure/ansible/inventories/dev ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Install Ansible
        if: steps.check_dir.outputs.exists == 'true'
        run: sudo apt-get update && sudo apt-get install -y ansible

      - name: Ansible Check Mode
        if: steps.check_dir.outputs.exists == 'true'
        working-directory: infrastructure/ansible
        run: ansible-playbook site.yml --check --inventory inventories/dev
